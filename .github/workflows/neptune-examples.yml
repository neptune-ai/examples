name: neptune-examples
on:
  schedule:
    - cron: '*/14 3 * * *' # Run once daily at arbitrary time (3:14 AM UTC)
  workflow_dispatch:
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-pip
      - name: Install OpenMP on MacOS for XGBoost integration
        if: runner.os == 'macOS'
        run: brew install libomp
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate test files
        run: python -m ci.build
      - name: Check that generated files are up-to-date
        # See https://stackoverflow.com/questions/3878624/how-do-i-programmatically-determine-if-there-are-uncommitted-changes
        run: |
          git status
          git update-index --refresh
          git diff-index --quiet HEAD --
      - name: Test with fixed versions of libraries
        run: python -m pytest -v --junitxml=junit/test-results.xml ci/test_examples_fixed_libs.py
      - name: Test with upgraded versions of libraries
        run: python -m pytest -v --junitxml=junit/test-results.xml ci/test_examples_upgraded_libs.py