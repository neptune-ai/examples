name: Notebooks test matrix
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
    secrets:
      NEPTUNE_API_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  test-notebooks:
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        notebooks: # Add in alphabetical order
          - how-to-guides/data-versioning/notebooks/Compare_model_training_runs_on_dataset_versions.ipynb
          - how-to-guides/data-versioning/notebooks/Organize_and_share_dataset_versions.ipynb
          - how-to-guides/data-versioning/notebooks/Version_datasets_in_model_training_runs.ipynb
          - how-to-guides/hello-neptune/notebooks/hello_neptune.ipynb
          - how-to-guides/monitor-ml-runs/notebooks/Monitor_ML_runs_live.ipynb
          - how-to-guides/neptune-hpo/notebooks/Neptune_hpo.ipynb
          - how-to-guides/organize-ml-experimentation/notebooks/Organize_ML_runs.ipynb
          - how-to-guides/present-cross-validation-results/notebooks/Neptune_cross_validation.ipynb
          - how-to-guides/re-run-failed-training/notebooks/re_run_failed_training.ipynb
          - how-to-guides/reproduce-run/notebooks/reproduce_run.ipynb
          - how-to-guides/restart-run-from-checkpoint/notebooks/neptune_save_restart_run_from_checkpoint.ipynb
          - integrations-and-supported-tools/catalyst/notebooks/Neptune_Catalyst.ipynb
          - integrations-and-supported-tools/catboost/notebooks/Neptune_CatBoost.ipynb
          - integrations-and-supported-tools/dalex/notebooks/Neptune_Dalex.ipynb
          - integrations-and-supported-tools/detectron2/notebooks/Neptune_detectron2.ipynb
          - integrations-and-supported-tools/evidently/notebooks/Neptune_Evidently.ipynb
          - integrations-and-supported-tools/fastai/notebooks/Neptune_fastai.ipynb
          - integrations-and-supported-tools/html/notebooks/Neptune_HTML_Support.ipynb
          - integrations-and-supported-tools/keras/notebooks/Neptune_Keras.ipynb
          - integrations-and-supported-tools/lightgbm/notebooks/Neptune_LightGBM.ipynb
          - integrations-and-supported-tools/mlflow/notebooks/Neptune_MLflow.ipynb
          - integrations-and-supported-tools/mosaicml-composer/notebooks/Neptune_MosaicML_Composer.ipynb
          - integrations-and-supported-tools/optuna/notebooks/Neptune_Optuna_integration.ipynb
          - integrations-and-supported-tools/pandas/notebooks/Neptune_Pandas.ipynb
          - integrations-and-supported-tools/plotting-libraries/notebooks/Neptune_Plotting_Support.ipynb
          - integrations-and-supported-tools/prophet/notebooks/Neptune_prophet.ipynb
          - integrations-and-supported-tools/pytorch/notebooks/Neptune_PyTorch.ipynb
          - integrations-and-supported-tools/pytorch-ignite/notebooks/Neptune_PyTorch_Ignite.ipynb
          - integrations-and-supported-tools/pytorch-lightning/notebooks/Neptune_PyTorch_Lightning.ipynb
          - integrations-and-supported-tools/sacred/notebooks/Neptune_Sacred.ipynb
          - integrations-and-supported-tools/sklearn/notebooks/Neptune_Scikit_learn.ipynb
          - integrations-and-supported-tools/skorch/notebooks/Neptune_Skorch.ipynb
          - integrations-and-supported-tools/tensorboard/notebooks/Neptune_Tensorflow_Tensorboard.ipynb
          - integrations-and-supported-tools/tensorflow/notebooks/Neptune_Tensorflow.ipynb
          - integrations-and-supported-tools/transformers/notebooks/Neptune_Transformers.ipynb
          - integrations-and-supported-tools/xgboost/notebooks/Neptune_XGBoost.ipynb
          - use-cases/time-series-forecasting/walmart-sales/notebooks/EDA.ipynb
          - use-cases/nlp/classification/fasttext/code/fasttext_nb.ipynb
          - use-cases/nlp/classification/keras/code/keras_nb.ipynb
        os: ["${{ inputs.os }}"]
        exclude:
          - notebooks: integrations-and-supported-tools/detectron2/notebooks/Neptune_Detectron2.ipynb
            os: windows-latest
          - notebooks: integrations-and-supported-tools/mosaicml-composer/notebooks/Neptune_MosaicML_Composer.ipynb
            python-version: "3.8"
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install OpenMP on MacOS for XGBoost integration
        if: runner.os == 'macOS'
        run: brew install libomp
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U -r requirements.txt
      - name: Test examples
        uses: nick-fields/retry@v3
        env:
          NEPTUNE_API_TOKEN: "ANONYMOUS"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        with:
          timeout_minutes: 60
          max_attempts: 2
          retry_on: timeout
          command: ipython ${{ matrix.notebooks }}
