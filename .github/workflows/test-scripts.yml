name: Scripts test matrix
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
    secrets:
      NEPTUNE_API_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  test-scripts:
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        scripts: # Add in alphabetical order
          - how-to-guides/data-versioning/scripts
          # - how-to-guides/ddp-training/scripts
          - how-to-guides/hello-neptune/scripts
          - how-to-guides/monitor-ml-runs/scripts
          - how-to-guides/organize-ml-experimentation/scripts
          - how-to-guides/present-cross-validation-results/scripts
          - how-to-guides/re-run-failed-training/scripts
          - how-to-guides/neptune-hpo/scripts
          - how-to-guides/sequential-pipelines/scripts
          - how-to-guides/reproduce-run/scripts
          - how-to-guides/restart-run-from-checkpoint/scripts
          - integrations-and-supported-tools/airflow/scripts
          - integrations-and-supported-tools/catalyst/scripts
          - integrations-and-supported-tools/catboost/scripts
          - integrations-and-supported-tools/dalex/scripts
          - integrations-and-supported-tools/detectron2/scripts
          - integrations-and-supported-tools/evidently/scripts
          - integrations-and-supported-tools/fastai/scripts
          - integrations-and-supported-tools/html/scripts
          - integrations-and-supported-tools/kedro/scripts
          - integrations-and-supported-tools/keras/scripts
          - integrations-and-supported-tools/lightgbm/scripts
          - integrations-and-supported-tools/mlflow/scripts
          - integrations-and-supported-tools/mosaicml-composer/scripts
          - integrations-and-supported-tools/optuna/scripts
          - integrations-and-supported-tools/pandas/scripts
          - integrations-and-supported-tools/plotting-libraries/scripts
          - integrations-and-supported-tools/prophet/scripts
          - integrations-and-supported-tools/pytorch/scripts
          - integrations-and-supported-tools/pytorch-ignite/scripts
          - integrations-and-supported-tools/pytorch-lightning/scripts
          - integrations-and-supported-tools/sacred/scripts
          - integrations-and-supported-tools/sklearn/scripts
          - integrations-and-supported-tools/skorch/scripts
          - integrations-and-supported-tools/tensorboard/scripts
          - integrations-and-supported-tools/tensorflow/scripts
          - integrations-and-supported-tools/transformers/scripts
          - integrations-and-supported-tools/xgboost/scripts
          - use-cases/time-series-forecasting/walmart-sales/scripts
          - use-cases/nlp/classification/fasttext/code
          - use-cases/nlp/classification/keras/code
          - use-cases/nlp/summarization/hf_transformers/scripts
        os: ["${{ inputs.os }}"]
        exclude:
          - scripts: integrations-and-supported-tools/detectron2/scripts
            os: windows-latest
          - scripts:
            - integrations-and-supported-tools/kedro/scripts
            - integrations-and-supported-tools/mosaicml-composer/scripts
            python-version: "3.8"
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install OpenMP on MacOS for XGBoost integration
        if: runner.os == 'macOS'
        run: brew install libomp
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Test examples
        uses: nick-fields/retry@v3
        env:
          NEPTUNE_API_TOKEN: "ANONYMOUS"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        with:
          timeout_minutes: 60
          max_attempts: 2
          retry_on: timeout
          command: |
            cd ${{ matrix.scripts }}
            bash run_examples.sh
